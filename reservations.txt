Appealing box_set:
-test 14: output matches the test case
-test 16: output matches the test case
-test 23: output matches the test case
-test 24: output matches the test case
-test 25: there is a BoxGet' instance for "counter" that doesn't appear in the test comments, so even if the implementation is correct, the test would fail. my output is correct.
-test 28: output matches the test case

Appealing nested_define: I ran the complete compiler, compiled with GCC, and run the binaries:
-test 13: output matches the test case
-test 15: in (moo x), x is an unbound free variable, so the function can't return a number, petite verifies
-test 16: in (* a x), x is an unbound free variable, so the function can't return a number, petite verifies
-test 17: in (* a x), x is an unbound free variable, so the function can't return a number, petite verifies
-test 18: in (h a x), x is an unbound free variable, so the function can't return a number, petite verifies
-test 19: in (h a x), x is an unbound free variable, so the function can't return a number, petite verifies
-test 20: output matches the test case
-test 21: output matches the test case
-test 22: output matches the test case
-test 23: output matches the test case
-test 24: output matches the test case
-test 29: output matches the test case
-test 20: output matches the test case
